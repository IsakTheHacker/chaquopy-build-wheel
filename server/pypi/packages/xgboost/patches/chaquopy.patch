--- src-original/setup.py       2020-05-17 08:26:01.000000000 +0000
+++ src/setup.py        2020-07-23 17:13:37.590350086 +0000
@@ -121,6 +121,12 @@
         '''Configure and build using CMake'''
         src_dir = 'xgboost'
         try:
+            # Chaquopy: the first copy_tree should fail when running from an sdist. But we
+            # happen to unpack the sdist into a directory called `src`, which causes copy_tree
+            # to try and copy that directory recursively into one of its own subdirectories,
+            # which never completes.
+            raise Exception()
+
             copy_tree(os.path.join(CURRENT_DIR, os.path.pardir),
                       os.path.join(self.build_temp, src_dir))
         except Exception:  # pylint: disable=broad-except
@@ -302,7 +308,9 @@
           maintainer_email='chohyu01@cs.washington.edu',
           zip_safe=False,
           packages=find_packages(),
-          include_package_data=True,
+          # Chaquopy: when building from an sdist, include_package_data unnecessarily includes
+          # the entire native library source code. Use package_data instead.
+          package_data = {"xgboost": ["VERSION"]},
           license='Apache-2.0',
           classifiers=['License :: OSI Approved :: Apache Software License',
                        'Development Status :: 5 - Production/Stable',
 
--- src-original/xgboost/libpath.py	2020-05-17 08:26:01.000000000 +0000
+++ src/xgboost/libpath.py	2020-07-23 17:07:28.345582832 +0000
@@ -46,7 +46,10 @@
     elif sys.platform == 'cygwin':
         dll_path = [os.path.join(p, 'cygxgboost.dll') for p in dll_path]
 
-    lib_path = [p for p in dll_path if os.path.exists(p) and os.path.isfile(p)]
+    # Chaquopy: checking whether the file exists is redundant, because core._load_lib already
+    # catches OSError from cdll.LoadLibrary, which we've monkey-patched to extract the library
+    # on demand.
+    lib_path = dll_path  # Was [p for p in dll_path if os.path.exists(p) and os.path.isfile(p)]
 
     # XGBOOST_BUILD_DOC is defined by sphinx conf.
     if not lib_path and not os.environ.get('XGBOOST_BUILD_DOC', False):
